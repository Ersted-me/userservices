@startuml
'https://plantuml.com/sequence-diagram

autonumber

actor "User"
participant "IndividualController"
participant "IndividualService"
participant "UserService"
participant "AddressService"
participant "CountryService"
participant "IndividualMapper"
participant "Database"

"User" -> "IndividualController": POST \ncontent-type: application\json \napi/v1/individuals \nрегистрация individual
"IndividualController" -> "IndividualService": вызов метода сохранения индивидуала \nsave(IndividualDto dto)
"IndividualService" -> "IndividualService": Валидация данных
"IndividualService" -> "IndividualMapper": маппинг в сущность \nmapToEntity(IndividualDto dto)
"IndividualMapper" -> "IndividualService": Возвращает сущность \nIndividualEntity
"IndividualService" -> "UserService":Вызов метода сохранения user'а \nsave(UserEntity entity)
"UserService" -> "UserService":Валидация данных
"UserService" -> "AddressService": Вызов метода сохранения address'а \nsave(AddressEntity entity)
"AddressService" -> "AddressService":Валидация данных
"AddressService" -> "CountryService":Вызов метода сохранения country \nsave(CountryEntity entity)
"CountryService" -> "Database": Сохранение CountryEntity в БД
"Database" -> "CountryService": Возвращает ID сохраненной записи
"CountryService" -> "AddressService": Возвращает сохраненный объект CountryEntity
"AddressService" -> "Database": Сохранение AddressEntity в БД
"Database" -> "AddressService": Возвращает ID сохраненной записи
"AddressService" -> "UserService": Возвращает сохраненный объект AddressEntity
"UserService" -> "Database": Сохранение UserEntity в БД
"Database" -> "UserService": Возвращает ID сохраненной записи
"UserService" -> "IndividualService": Возвращает сохраненный объект UserEntity
"IndividualService" -> "Database": Сохранение IndividualEntity в БД
"Database" -> "IndividualService": Возвращает ID сохраненной записи
"IndividualService" -> "IndividualController": Возвращает ResponseDto
"IndividualController" -> "User": status: 200 \ncontent-type: application\json \nResponseDto
@enduml